---
Parameters:
  ENV:
    Description: 'Environment'
    Default: dev
    Type: String  

  # AppMeshMeshName:
  #   Type: String
  #   Description: Name of mesh

  # ECSServicesDomain:
  #   Type: String
  #   Description: DNS namespace used by services e.g. default.svc.cluster.local

Resources:
  ### colorteller-green.default.svc.cluster.local
  ColorTellerGreenServiceDiscoveryRecord:
    Type: 'AWS::ServiceDiscovery::Service'
    Properties:
      Name: colorteller-green
      DnsConfig:
        NamespaceId: 
          'Fn::ImportValue': demo-cluster-ECSServiceDiscoveryNamespace
        DnsRecords:
          - Type: A
            TTL: 300
      HealthCheckCustomConfig:
        FailureThreshold: 1

  ColorTellerGreenService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: terra10-dev
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: 1
      LaunchType: FARGATE
      ServiceRegistries:
        - RegistryArn:
            'Fn::GetAtt': ColorTellerGreenServiceDiscoveryRecord.Arn
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - 'Fn::ImportValue': demo-edge-network-securitygroup
          Subnets: 
            - 'Fn::ImportValue': demo-edge-network-subnet-1a
      TaskDefinition: DEMO-colorteller-green
      # !Ref GreenTaskDefinition

  # Logging
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/codefest/green'
      RetentionInDays: 1

  # GreenTaskDefinition:
  #   DependsOn: LogGroup
  #   Type: 'AWS::ECS::TaskDefinition'
  #   Properties:
  #     RequiresCompatibilities:
  #       - FARGATE
  #     Cpu: 1024
  #     Memory: 2048
  #     ContainerDefinitions:
  #       - Name: "app"
  #         Image: 779717477382.dkr.ecr.eu-west-1.amazonaws.com/colorteller
  #         Essential: true
  #         # DependsOn:
  #         # - Condition: HEALTHY
  #         #   ContainerName: envoy
  #         LogConfiguration:
  #           LogDriver: "awslogs"
  #           Options:
  #             awslogs-group: /codefest/green
  #             awslogs-region: { Ref: "AWS::Region" }
  #             awslogs-stream-prefix: "green-app"
  #         PortMappings:
  #           - ContainerPort: 9080
  #             HostPort: 9080
  #             Protocol: "tcp"
  #         Environment:
  #           - Name: COLOR
  #             Value: green
  #           - Name: SERVER_PORT
  #             Value: 9080
  #           - Name: STAGE
  #             Value: ""
  #       - Name: "envoy"
  #         Image: 840364872350.dkr.ecr.eu-west-1.amazonaws.com/aws-appmesh-envoy:v1.12.1.1-prod
  #         Essential: true
  #         User: 1337
  #         LogConfiguration:
  #           LogDriver: "awslogs"
  #           Options:
  #             awslogs-group: /codefest/green
  #             awslogs-region: { Ref: "AWS::Region" }
  #             awslogs-stream-prefix: green-envoy
  #         Ulimits:
  #           - Name: nofile
  #             SoftLimit: 15000
  #             HardLimit: 15000
  #         PortMappings:
  #           - ContainerPort: 9901
  #             HostPort: 9901
  #             Protocol: "tcp"
  #           - ContainerPort: 15000
  #             HostPort: 15000
  #             Protocol: "tcp"
  #           - ContainerPort: 15001
  #             HostPort: 15001
  #             Protocol: "tcp"
  #         Environment:
  #           - Name: APPMESH_VIRTUAL_NODE_NAME
  #             Value: mesh/terra10-mesh/virtualNode/colorteller-green-vn
  #           - Name: APPMESH_XDS_ENDPOINT
  #             Value: ""
  #           - Name: ENABLE_ENVOY_STATS_TAGS
  #             Value: 1
  #           - Name: ENABLE_ENVOY_XRAY_TRACING
  #             Value: 1
  #           - Name: ENVOY_LOG_LEVEL
  #             Value: debug
  #       - Name: "xray-daemon"
  #         Image: amazon/aws-xray-daemon
  #         User: 1337
  #         Essential: true
  #         LogConfiguration:
  #           LogDriver: "awslogs"
  #           Options:
  #             awslogs-group: /codefest/green
  #             awslogs-region: { Ref: "AWS::Region" }
  #             awslogs-stream-prefix: "green-xray"
  #         PortMappings:
  #           - ContainerPort: 2000
  #             HostPort: 2000
  #             Protocol: udp
  #     ProxyConfiguration:
  #       ContainerName: envoy
  #       Type: APPMESH
  #       ProxyConfigurationProperties: 
  #         - Name: ProxyIngressPort
  #           Value: 15000
  #         - Name: AppPorts
  #           Value: 9080
  #         - Name: EgressIgnoredIPs
  #           Value: "169.254.170.2,169.254.169.254"
  #         - Name: IgnoredUID
  #           Value: 1337
  #         - Name: ProxyEgressPort
  #           Value: 15001    
  #     ExecutionRoleArn: DEMO-ecs-cluster-TaskExecutionIamRole-13Z4K0V5LRJPH 
  #     TaskRoleArn: DEMO-ecs-cluster-TaskIamRole-1274J6DI6B9P0
  #     NetworkMode: "awsvpc"